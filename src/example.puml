@startuml

' ==========================
' ENUMS
' ==========================
enum DisplayMode {
    MODE_DEFAULT
    MODE_MENU
    MODE_NETWORK
    MODE_NEWS
    MODE_COUNT
}

' ==========================
' STRUCTS
' ==========================
struct IRAction {
    uint32_t code
    void (**callbackField)()
}

struct IRCallbacks {
    void (*onBack)()
    void (*onChannelDown)()
    void (*onChannelUp)()
    void (*onDigit)(int)
    void (*onEQ)()
    void (*onFunction)()
    void (*onPlayPause)()
    void (*onPower)()
    void (*onRepeat)()
    void (*onSkip)()
    void (*onVolumeDown)()
    void (*onVolumeUp)()
}

' ==========================
' BASE UI VIEWS
' ==========================
abstract class View {
    +render(display: DisplayOutput*)
    +onEnter()
    +onExit()
    +[IR callbacks...]
}

class DefaultView {
    -showingClimate: bool
    -lastToggle: unsigned long
}

class FunctionView {
    -switchViewCallback: SwitchViewCallback
    +setSwitchViewCallback(cb: SwitchViewCallback)
}

class NewsView {
    -timeOfLastTitleChange: unsigned long
}

View <|-- DefaultView
View <|-- FunctionView
View <|-- NewsView

' ==========================
' DISPLAY INTERFACE
' ==========================
interface DisplayOutput <<interface>> {
    +print(text: const char*)
    +clear()
    +setCursor(col: int, row: int)
}

class LCD {
    +print(text: const char*)
    +clear()
    +setCursor(col: int, row: int)
}

DisplayOutput <|.. LCD
View --> DisplayOutput

' ==========================
' VIEW CONTROLLER
' ==========================
class ViewController {
    -currentView: View*
    -currentMode: DisplayMode
    +switchView(mode: DisplayMode)
    +renderCurrentView(display: DisplayOutput*)
}

ViewController --> View : manages
ViewController --> DisplayOutput : uses

' ==========================
' MODULES
' ==========================
class RSSReader {}
class WeatherAPI {}
class TimeUtil {}
class SensorAPI {}
class WiFiInfo {}

DefaultView --> SensorAPI
DefaultView --> WeatherAPI
DefaultView --> TimeUtil
NewsView --> RSSReader

' ==========================
' MAIN + CONTROLLER
' ==========================
class Controller
class Main {
    +setup()
    +loop()
}

Main --> Controller : app_init()
Controller --> ViewController
Controller --> WiFiInfo
Controller --> DisplayOutput : injects

' ==========================
' IR SYSTEM
' ==========================
class IRReceiver
Main --> IRReceiver : ir_poll()
Controller --> IRReceiver : ir_registerCallbacks()

IRAction --> IRCallbacks
IRAction --> IRCode
IRCallbacks --> View : callback targets

' ==========================
' CALLBACKS & SWITCHING
' ==========================
FunctionView --> ViewController : setSwitchViewCallback
FunctionView --> DisplayMode

@enduml
