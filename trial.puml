@startuml
title DisplayGadget System - Updated with Renderer Abstraction

' ==== ENUM ====
enum DisplayMode {
    MODE_DEFAULT
    MODE_MENU
    MODE_NEWS
    MODE_NETWORK
    MODE_COUNT
}

' ==== CORE CONTROLLERS ====
class Controller {
    +init()
    +loop()
}

class ViewController {
    +registerView(view: IView*)
    +setActiveView(index: uint8_t)
    +getCurrentView(): IView*
    +handleInput(key: int)
}

' ==== INTERFACES ====
interface IView {
    +onEnter()
    +onExit()
    +render()
    +handleInput(key: int)
}

interface IDisplayRenderer {
    +drawText(col: int, row: int, text: const char*)
    +drawWrap(text: const char*)
    +clear()
}

interface ILcd {
    +begin(cols, rows)
    +clear()
    +setCursor(col, row)
    +print(text)
    +print(char)
    +backlight(enable)
}

interface IInputProvider {
    +readInput(): int
}

interface INetwork
interface ISystem

' ==== DISPLAY IMPLEMENTATION ====
class LcdRenderer {
    -ILcd& lcd
    -cols, rows, col, row
    +drawText()
    +drawWrap()
    +clear()
}

LcdRenderer ..|> IDisplayRenderer
LcdRenderer --> ILcd

class Hd44780Adapter
Hd44780Adapter ..|> ILcd

' ==== INPUTS ====
class IRInputProvider
class ButtonInputProvider
class SerialInputProvider

IRInputProvider ..|> IInputProvider
ButtonInputProvider ..|> IInputProvider
SerialInputProvider ..|> IInputProvider

' ==== VIEWS ====
class DefaultView
class MenuView
class NewsView
class MyCustomView

IView <|-- DefaultView
IView <|-- MenuView
IView <|-- NewsView
IView <|-- MyCustomView

DefaultView ..> IDisplayRenderer
MenuView ..> IDisplayRenderer
NewsView ..> IDisplayRenderer
MyCustomView ..> IDisplayRenderer

DefaultView ..> INetwork
DefaultView ..> TimeUtils
DefaultView ..> DHTSensor
NewsView ..> RSSReader

' ==== SYSTEM MODULES ====
class DHTSensor
class TimeUtils
class RSSReader
class Weather

' ==== RELATIONSHIPS ====
Controller --> ViewController
Controller --> IInputProvider
Controller --> IDisplayRenderer
Controller --> INetwork
Controller --> ISystem

@enduml
' [Controller]
'     ↳ owns → [ViewController]
'                 ↳ manages → [IView*]
'                             ↳ depends on → [IDisplayRenderer]
'                                            ↳ implemented by → [LcdRenderer]
'                                                             ↳ uses → [ILcd] (e.g. Hd44780)
